!function(){"use strict";var e="undefined"!=typeof Float32Array?Float32Array:Array;function t(){var t=new e(16);return e!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0),t[0]=1,t[5]=1,t[10]=1,t[15]=1,t}Math.hypot||(Math.hypot=function(){for(var e=0,t=arguments.length;t--;)e+=arguments[t]*arguments[t];return Math.sqrt(e)});var n=function(e,t,n,r,a,i,o){var s=1/(t-n),c=1/(r-a),u=1/(i-o);return e[0]=-2*s,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=-2*c,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=2*u,e[11]=0,e[12]=(t+n)*s,e[13]=(a+r)*c,e[14]=(o+i)*u,e[15]=1,e};function r(){var t=new e(2);return e!=Float32Array&&(t[0]=0,t[1]=0),t}r();class a{constructor({device:e}){this.aspect=1,this.near=-100,this.far=100,this.zoom=100,this.position=r(),this.matrix=t(),this.matrixInverse=t(),this.device=e,this.buffer=e.createBuffer({size:this.matrix.byteLength,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM})}update(){const{device:e,buffer:t,matrix:r,matrixInverse:a,aspect:i,near:o,far:s,zoom:c,position:u}=this,d=c*i*.5,f=.5*c;var h,l,p,m,g,v,w,x,y,b,E,M,P,U,I,A,B,S,T,F,G,z,R,q,O,_,C,L,V,D,N;n(r,u[0]-d,u[0]+d,u[1]-f,u[1]+f,o,s),h=a,p=(l=r)[0],m=l[1],g=l[2],v=l[3],w=l[4],x=l[5],y=l[6],b=l[7],E=l[8],M=l[9],P=l[10],U=l[11],I=l[12],A=l[13],B=l[14],S=l[15],(N=(T=p*x-m*w)*(D=P*S-U*B)-(F=p*y-g*w)*(V=M*S-U*A)+(G=p*b-v*w)*(L=M*B-P*A)+(z=m*y-g*x)*(C=E*S-U*I)-(R=m*b-v*x)*(_=E*B-P*I)+(q=g*b-v*y)*(O=E*A-M*I))&&(N=1/N,h[0]=(x*D-y*V+b*L)*N,h[1]=(g*V-m*D-v*L)*N,h[2]=(A*q-B*R+S*z)*N,h[3]=(P*R-M*q-U*z)*N,h[4]=(y*C-w*D-b*_)*N,h[5]=(p*D-g*C+v*_)*N,h[6]=(B*G-I*q-S*F)*N,h[7]=(E*q-P*G+U*F)*N,h[8]=(w*V-x*C+b*O)*N,h[9]=(m*C-p*V-v*O)*N,h[10]=(I*R-A*G+S*T)*N,h[11]=(M*G-E*R-U*T)*N,h[12]=(x*_-w*L-y*O)*N,h[13]=(p*L-m*_+g*O)*N,h[14]=(A*F-I*z-B*T)*N,h[15]=(E*z-M*F+P*T)*N),e.queue.writeBuffer(t,0,r)}}var i=e=>{const t=e.createTexture({dimension:"2d",format:"rgba8unorm",size:[16,16,8],usage:GPUTextureUsage.COPY_DST|GPUTextureUsage.TEXTURE_BINDING}),n=new Image;return n.crossOrigin="anonymous",n.addEventListener("load",(()=>{const r=document.createElement("canvas"),a=r.getContext("2d");r.width=16,r.height=128,a.drawImage(n,0,0);const i=a.getImageData(0,0,r.width,r.height);e.queue.writeTexture({texture:t},i.data.buffer,{bytesPerRow:64,rowsPerImage:16},[16,16,8])}),!1),n.src="affc32f7cff0f9d0.png",t.createView()};const o=({stride:e})=>`\nstruct VertexInput {\n  @builtin(vertex_index) index : u32,\n  @builtin(instance_index) instance: u32,\n  @location(0) texture : u32,\n}\n\nstruct VertexOutput {\n  @builtin(position) position : vec4<f32>,\n  @location(0) @interpolate(flat) texture : u32,\n  @location(1) uv : vec2<f32>,\n}\n\n@group(0) @binding(0) var<uniform> camera : mat4x4<f32>;\n\nconst quad = array<vec4<f32>, 6>(\n  vec4<f32>(-0.5, -0.5, 0, 1), vec4<f32>(0.5, -0.5, 1, 1), vec4<f32>(-0.5, 0.5, 0, 0),\n  vec4<f32>(-0.5, 0.5, 0, 0), vec4<f32>(0.5, -0.5, 1, 1), vec4<f32>(0.5, 0.5, 1, 0)\n);\n\n@vertex\nfn main(vertex : VertexInput) -> VertexOutput {\n  var out : VertexOutput;\n  out.position = camera * vec4<f32>(vec2<f32>(f32(vertex.instance % ${e}), f32(vertex.instance / ${e}) * -1) + quad[vertex.index].xy, 0, 1);\n  out.texture = vertex.texture;\n  out.uv = quad[vertex.index].zw;\n  return out;\n}\n`;class s{constructor({renderer:{camera:e,device:t,format:n},size:r,setup:a}){this.pipeline=t.createRenderPipeline({layout:"auto",vertex:{buffers:[{arrayStride:1*Float32Array.BYTES_PER_ELEMENT,stepMode:"instance",attributes:[{shaderLocation:0,offset:0,format:"uint32"}]}],entryPoint:"main",module:t.createShaderModule({code:o({stride:r[0]})})},fragment:{entryPoint:"main",module:t.createShaderModule({code:"\nstruct FragmentInput {\n  @location(0) @interpolate(flat) texture : u32,\n  @location(1) uv : vec2<f32>,\n}\n\n@group(0) @binding(1) var atlas : texture_2d_array<f32>;\n@group(0) @binding(2) var atlasSampler : sampler;\n\n@fragment\nfn main(fragment : FragmentInput) -> @location(0) vec4<f32> {\n  return textureSample(atlas, atlasSampler, fragment.uv, i32(fragment.texture));\n}\n"}),targets:[{format:n}]},primitive:{topology:"triangle-list"}}),this.bindings=t.createBindGroup({layout:this.pipeline.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:e.buffer}},{binding:1,resource:i(t)},{binding:2,resource:t.createSampler({magFilter:"linear",minFilter:"linear"})}]}),this.count=r[0]*r[1],this.instances=t.createBuffer({mappedAtCreation:!0,size:this.count*Uint32Array.BYTES_PER_ELEMENT,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.STORAGE|GPUBufferUsage.VERTEX}),a(new Uint32Array(this.instances.getMappedRange()),r),this.instances.unmap()}render(e){const{bindings:t,count:n,instances:r,pipeline:a}=this;e.setPipeline(a),e.setBindGroup(0,t),e.setVertexBuffer(0,r),e.draw(6,n)}}class c{constructor({adapter:e,camera:t,device:n}){this.camera=t,this.device=n,this.format=navigator.gpu.getPreferredCanvasFormat(e),this.canvas=document.createElement("canvas"),this.canvas.width=Math.floor(window.innerWidth*(window.devicePixelRatio||1)),this.canvas.height=Math.floor(window.innerHeight*(window.devicePixelRatio||1)),this.context=this.canvas.getContext("webgpu"),this.context.configure({alphaMode:"opaque",device:n,format:this.format}),this.descriptor={colorAttachments:[{clearValue:{r:1,g:1,b:1,a:1},loadOp:"clear",storeOp:"store"}]},this.scene=[],this.textures=new Map}render(e){const{context:t,descriptor:n,scene:r}=this;n.colorAttachments[0].view=t.getCurrentTexture().createView();const a=e.beginRenderPass(n);r.forEach((e=>e.render(a))),a.end()}setSize(e,t){const{camera:n,canvas:r}=this,a=window.devicePixelRatio||1;r.width=Math.floor(e*a),r.height=Math.floor(t*a),r.style.width=`${e}px`,r.style.height=`${t}px`,n.aspect=e/t}}var u={0:[[0,3,6,5,7],[0,2,7,4,6],[0,3,4,5,7],[0,2,5,4,6]],1:[[1,2,4],[1,3,5],[1,2,6],[1,3,7]],2:[[1,2,4],[0,7],[1,2,6],[0,5]],3:[[0,6],[1,3,5],[0,4],[1,3,7]],4:[[0,3,5,7,6],[0,7,6],[1,2],[0,5,6]],5:[[0,6,7],[0,2,4,6],[0,4,7],[1,3]],6:[[1,2],[0,7,4],[0,3,5,7],[0,5,4]],7:[[0,6,5],[1,3],[0,4,5],[0,2,4,6]]};const d=Object.keys(u).map((e=>parseInt(e,10))),f=[[0,1],[-1,0],[0,-1],[1,0]];var h=(e,t)=>{console.time("wfc");const n=[],r=Array.from({length:t[0]*t[1]},((e,t)=>(n.push(t),[...d]))),a=new Map,i=e=>{const n=Math.floor(e%t[0]),o=Math.floor(e/t[0]);f.forEach(((s,c)=>{const d=n+s[0],f=o+s[1];if(d<0||d>=t[0]||f<0||f>=t[1])return;const h=f*t[0]+d,l=r[h];if(1===l.length)return;let p=!1;for(let t=0,n=l.length;t<n;t++){const i=l[t];-1===u[i][c].findIndex((t=>r[e].includes(t)))&&(a.has(h)||a.set(h,l.slice()),l.splice(t,1),t--,n--,p=!0)}if(0===l.length)throw new Error("FAIL");p&&i(h)}))};for(;n.length;){const e=n.splice(Math.floor(Math.random()*n.length),1)[0],t=r[e];if(1!==t.length)for(;t.length;){const n=t.splice(Math.floor(Math.random()*t.length),1)[0];r[e]=[n];try{i(e);break}catch(e){a.forEach(((e,t)=>{r[t]=e}))}finally{a.clear()}}}console.timeEnd("wfc"),r.forEach((([t],n)=>{e[n]=t}))};(async()=>{if(!navigator.gpu)throw new Error("WebGPU support");const e=await navigator.gpu.requestAdapter();if(!e)throw new Error("WebGPU adapter");const t=await e.requestDevice();return{adapter:e,device:t}})().then((({adapter:e,device:t})=>{const n=new a({device:t}),r=new c({adapter:e,camera:n,device:t});document.getElementById("renderer").appendChild(r.canvas),r.setSize(window.innerWidth,window.innerHeight),window.addEventListener("resize",(()=>r.setSize(window.innerWidth,window.innerHeight)),!1);const i=new Uint32Array([300,160]),o=new s({renderer:r,size:i,setup:h});r.scene.push(o);const u=()=>{requestAnimationFrame(u);const e=performance.now()/1e3,a=.3*i[1],o=.2*e;n.position[0]=.5*i[0]+Math.sin(o)*a,n.position[1]=-.5*i[1]-Math.cos(o)*a,n.zoom=60+20*Math.sin(o),n.update();const s=t.createCommandEncoder();r.render(s),t.queue.submit([s.finish()])};requestAnimationFrame(u)})).catch((e=>{console.error(e),document.getElementById("support").classList.add("enabled")})).finally((()=>document.getElementById("loading").classList.remove("enabled")))}();
