!function(){"use strict";var e="undefined"!=typeof Float32Array?Float32Array:Array;function t(){var t=new e(16);return e!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0),t[0]=1,t[5]=1,t[10]=1,t[15]=1,t}Math.hypot||(Math.hypot=function(){for(var e=0,t=arguments.length;t--;)e+=arguments[t]*arguments[t];return Math.sqrt(e)});var n=function(e,t,n,r,i,o,a){var s=1/(t-n),c=1/(r-i),u=1/(o-a);return e[0]=-2*s,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=-2*c,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=2*u,e[11]=0,e[12]=(t+n)*s,e[13]=(i+r)*c,e[14]=(a+o)*u,e[15]=1,e};function r(){var t=new e(2);return e!=Float32Array&&(t[0]=0,t[1]=0),t}function i(t,n){var r=new e(2);return r[0]=t,r[1]=n,r}function o(e,t){return e[0]=t[0],e[1]=t[1],e}function a(e,t,n){return e[0]=t[0]+n[0],e[1]=t[1]+n[1],e}function s(e,t,n){var r=t[0],i=t[1];return e[0]=n[0]*r+n[4]*i+n[12],e[1]=n[1]*r+n[5]*i+n[13],e}var c=function(e,t,n){return e[0]=t[0]-n[0],e[1]=t[1]-n[1],e};r();class u{constructor({device:e}){this.aspect=1,this.near=-100,this.far=100,this.zoom=100,this.position=r(),this.matrix=t(),this.matrixInverse=t(),this.device=e,this.buffer=e.createBuffer({size:this.matrix.byteLength,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM})}update(){const{device:e,buffer:t,matrix:r,matrixInverse:i,aspect:o,near:a,far:s,zoom:c,position:u}=this,d=c*o*.5,h=.5*c;var l,f,m,p,v,g,w,x,b,y,E,M,z,P,U,I,A,B,T,F,L,S,G,R,q,_,O,C,V,D,W;n(r,u[0]-d,u[0]+d,u[1]-h,u[1]+h,a,s),l=i,m=(f=r)[0],p=f[1],v=f[2],g=f[3],w=f[4],x=f[5],b=f[6],y=f[7],E=f[8],M=f[9],z=f[10],P=f[11],U=f[12],I=f[13],A=f[14],B=f[15],(W=(T=m*x-p*w)*(D=z*B-P*A)-(F=m*b-v*w)*(V=M*B-P*I)+(L=m*y-g*w)*(C=M*A-z*I)+(S=p*b-v*x)*(O=E*B-P*U)-(G=p*y-g*x)*(_=E*A-z*U)+(R=v*y-g*b)*(q=E*I-M*U))&&(W=1/W,l[0]=(x*D-b*V+y*C)*W,l[1]=(v*V-p*D-g*C)*W,l[2]=(I*R-A*G+B*S)*W,l[3]=(z*G-M*R-P*S)*W,l[4]=(b*O-w*D-y*_)*W,l[5]=(m*D-v*O+g*_)*W,l[6]=(A*L-U*R-B*F)*W,l[7]=(E*R-z*L+P*F)*W,l[8]=(w*V-x*O+y*q)*W,l[9]=(p*O-m*V-g*q)*W,l[10]=(U*G-I*L+B*T)*W,l[11]=(M*L-E*G-P*T)*W,l[12]=(x*_-w*C-b*q)*W,l[13]=(m*C-p*_+v*q)*W,l[14]=(I*F-U*S-A*T)*W,l[15]=(E*S-M*F+z*T)*W),e.queue.writeBuffer(t,0,r)}}var d=e=>{const t=e.createTexture({dimension:"2d",format:"rgba8unorm",size:[16,16,12],usage:GPUTextureUsage.COPY_DST|GPUTextureUsage.TEXTURE_BINDING}),n=new Image;return n.crossOrigin="anonymous",n.addEventListener("load",(()=>{const r=document.createElement("canvas"),i=r.getContext("2d");r.width=16,r.height=192,i.drawImage(n,0,0);const o=i.getImageData(0,0,r.width,r.height);e.queue.writeTexture({texture:t},o.data.buffer,{bytesPerRow:64,rowsPerImage:16},[16,16,12])}),!1),n.src="fe0fba6944314168.png",t.createView()};const h=({stride:e})=>`\n@group(0) @binding(0) var<uniform> camera : mat4x4<f32>;\n@group(0) @binding(1) var atlas : texture_2d_array<f32>;\n@group(0) @binding(2) var atlasSampler : sampler;\n\nstruct VertexInput {\n  @builtin(vertex_index) index : u32,\n  @builtin(instance_index) instance: u32,\n  @location(0) texture : u32,\n}\n\nstruct VertexOutput {\n  @builtin(position) position : vec4<f32>,\n  @location(0) @interpolate(flat) texture : u32,\n  @location(1) uv : vec2<f32>,\n}\n\nconst quad = array<vec4<f32>, 6>(\n  vec4<f32>(0, 0, 0, 1), vec4<f32>(1, 0, 1, 1), vec4<f32>(0, 1, 0, 0),\n  vec4<f32>(0, 1, 0, 0), vec4<f32>(1, 0, 1, 1), vec4<f32>(1, 1, 1, 0)\n);\n\n@vertex\nfn vertex(vertex : VertexInput) -> VertexOutput {\n  var out : VertexOutput;\n  out.position = camera * vec4<f32>(vec2<f32>(f32(vertex.instance % ${e}), f32(vertex.instance / ${e}) * -1 - 1) + quad[vertex.index].xy, 0, 1);\n  out.texture = vertex.texture;\n  out.uv = quad[vertex.index].zw;\n  return out;\n}\n\nstruct FragmentInput {\n  @location(0) @interpolate(flat) texture : u32,\n  @location(1) uv : vec2<f32>,\n}\n\n@fragment\nfn fragment(fragment : FragmentInput) -> @location(0) vec4<f32> {\n  return textureSample(atlas, atlasSampler, fragment.uv, i32(fragment.texture));\n}\n`;class l{constructor({renderer:{camera:e,device:t,format:n},size:r,setup:i}){const o=t.createShaderModule({code:h({stride:r[0]})});this.pipeline=t.createRenderPipeline({layout:"auto",vertex:{buffers:[{arrayStride:1*Float32Array.BYTES_PER_ELEMENT,stepMode:"instance",attributes:[{shaderLocation:0,offset:0,format:"uint32"}]}],entryPoint:"vertex",module:o},fragment:{entryPoint:"fragment",module:o,targets:[{format:n}]},primitive:{topology:"triangle-list"}}),this.bindings=t.createBindGroup({layout:this.pipeline.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:e.buffer}},{binding:1,resource:d(t)},{binding:2,resource:t.createSampler({magFilter:"linear",minFilter:"linear"})}]}),this.count=r[0]*r[1],this.instances=t.createBuffer({mappedAtCreation:!0,size:this.count*Uint32Array.BYTES_PER_ELEMENT,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.STORAGE|GPUBufferUsage.VERTEX}),i(new Uint32Array(this.instances.getMappedRange()),r),this.instances.unmap()}render(e){const{bindings:t,count:n,instances:r,pipeline:i}=this;e.setPipeline(i),e.setBindGroup(0,t),e.setVertexBuffer(0,r),e.draw(6,n)}}class f{constructor({camera:e,target:n}){this.buttons={primary:!1,secondary:!1,zoomin:!1,zoomout:!1},this.camera=e,this.cursor=i(0,0),this.pointer=i(0,0),this.panning={enabled:!1,initial:r(),matrix:t(),origin:r()},window.addEventListener("blur",this.onBlur.bind(this),!1),n.addEventListener("mousedown",this.onMouseDown.bind(this),!1),window.addEventListener("mousemove",this.onMouseMove.bind(this),!1),window.addEventListener("mouseup",this.onMouseUp.bind(this),!1),window.addEventListener("wheel",this.onMouseWheel.bind(this),!1)}onBlur(){const{buttons:e}=this;e.primary=e.secondary=e.zoomin=e.zoomout=!1}onMouseDown({button:e}){const{buttons:t}=this;switch(e){case 0:t.primary=!0;break;case 2:t.secondary=!0}}onMouseMove({clientX:e,clientY:t}){const{pointer:n}=this;var r,i,o;r=n,i=e/window.innerWidth*2-1,o=-t/window.innerHeight*2+1,r[0]=i,r[1]=o}onMouseUp({button:e}){const{buttons:t}=this;switch(e){case 0:t.primary=!1;break;case 2:t.secondary=!1}}onMouseWheel({deltaY:e}){const{buttons:t}=this;t.zoomin=e<0,t.zoomout=e>0}update(){const{buttons:e,camera:t,cursor:n,panning:r,pointer:i}=this;if(r.enabled)return e.primary?(o(n,i),s(n,n,r.matrix),c(t.position,r.initial,n),a(t.position,t.position,r.origin),void t.update()):void(r.enabled=!1);var u,d;if(e.primary&&(r.enabled=!0,o(r.origin,t.position),u=r.matrix,d=t.matrixInverse,u[0]=d[0],u[1]=d[1],u[2]=d[2],u[3]=d[3],u[4]=d[4],u[5]=d[5],u[6]=d[6],u[7]=d[7],u[8]=d[8],u[9]=d[9],u[10]=d[10],u[11]=d[11],u[12]=d[12],u[13]=d[13],u[14]=d[14],u[15]=d[15],o(r.initial,i),s(r.initial,r.initial,r.matrix)),e.zoomin||e.zoomout){const r=e.zoomin?-1:1;e.zoomin=e.zoomout=!1,o(n,i),s(n,n,t.matrixInverse),c(n,n,t.position),a(t.position,t.position,n),t.zoom+=4*r,t.zoom=Math.min(Math.max(t.zoom,30),160),t.update(),o(n,i),s(n,n,t.matrixInverse),c(n,n,t.position),c(t.position,t.position,n),t.update()}}}class m{constructor({adapter:e,camera:t,device:n}){this.camera=t,this.device=n,this.format=navigator.gpu.getPreferredCanvasFormat(e),this.canvas=document.createElement("canvas"),this.canvas.width=Math.floor(window.innerWidth*(window.devicePixelRatio||1)),this.canvas.height=Math.floor(window.innerHeight*(window.devicePixelRatio||1)),this.context=this.canvas.getContext("webgpu"),this.context.configure({alphaMode:"opaque",device:n,format:this.format}),this.descriptor={colorAttachments:[{clearValue:{r:1,g:1,b:1,a:1},loadOp:"clear",storeOp:"store"}]},this.scene=[],this.textures=new Map}render(e){const{context:t,descriptor:n,scene:r}=this;n.colorAttachments[0].view=t.getCurrentTexture().createView();const i=e.beginRenderPass(n);r.forEach((e=>e.render(i))),i.end()}setSize(e,t){const{camera:n,canvas:r}=this,i=window.devicePixelRatio||1;r.width=Math.floor(e*i),r.height=Math.floor(t*i),r.style.width=`${e}px`,r.style.height=`${t}px`,n.aspect=e/t,n.update()}}var p=[[[0,3,5,6,7,8,11],[0,2,4,6,7,8,9],[0,3,4,5,7,9,10],[0,2,4,5,6,10,11]],[[1,2,4,9,10],[1,3,5,10,11],[1,2,6,8,11],[1,3,7,8,9]],[[1,2,4,9,10],[0,2,4,6,7,8,9],[1,2,6,8,11],[0,2,4,5,6,10,11]],[[0,3,5,6,7,8,11],[1,3,5,10,11],[0,3,4,5,7,9,10],[1,3,7,8,9]],[[0,3,5,6,7,8,11],[0,2,4,6,7,8,9],[1,2,6,8,11],[0,2,4,5,6,10,11]],[[0,3,5,6,7,8,11],[0,2,4,6,7,8,9],[0,3,4,5,7,9,10],[1,3,7,8,9]],[[1,2,4,9,10],[0,2,4,6,7,8,9],[0,3,4,5,7,9,10],[0,2,4,5,6,10,11]],[[0,3,5,6,7,8,11],[1,3,5,10,11],[0,3,4,5,7,9,10],[0,2,4,5,6,10,11]],[[1,2,4,9,10],[1,3,5,10,11],[0,3,4,5,7,9,10],[0,2,4,5,6,10,11]],[[0,3,5,6,7,8,11],[1,3,5,10,11],[1,2,6,8,11],[0,2,4,5,6,10,11]],[[0,3,5,6,7,8,11],[0,2,4,6,7,8,9],[1,2,6,8,11],[1,3,7,8,9]],[[1,2,4,9,10],[0,2,4,6,7,8,9],[0,3,4,5,7,9,10],[1,3,7,8,9]]];const v=Array.from({length:p.length},((e,t)=>t)),g=[[0,1],[-1,0],[0,-1],[1,0]];var w=(e,t)=>{console.time("wfc");const n=Array.from({length:t[0]*t[1]},(()=>v.slice())),r=new Map,i=(e,i,a)=>g.forEach(((s,c)=>{const u=i+s[0],d=a+s[1];if(u<0||u>=t[0]||d<0||d>=t[1])return;const h=d*t[0]+u,l=n[h];let f=!1;for(let t=0,n=l.length;t<n;t++){const i=l[t];-1===p[i][c].findIndex((t=>e.includes(t)))&&(r.has(h)||r.set(h,l.slice()),l.splice(t,1),t--,n--,f=!0)}if(0===l.length)throw new Error("FAIL");f&&o(h)})),o=e=>i(n[e],Math.floor(e%t[0]),Math.floor(e/t[0]));try{for(let e=0;e<t[0];e++)i([0],e,-1),i([0],e,t[1]);for(let e=0;e<t[1];e++)i([0],-1,e),i([0],t[0],e)}catch(e){throw new Error("Failed to propagate initial state")}const a=Array.from({length:n.length},((e,t)=>t));for(;a.length;){const e=a.splice(Math.floor(Math.random()*a.length),1)[0],t=n[e];if(1!==t.length)for(;t.length;){const i=t.splice(Math.floor(Math.random()*t.length),1)[0];n[e]=[i];try{o(e);break}catch(e){r.forEach(((e,t)=>{n[t]=e}))}finally{r.clear()}}}console.timeEnd("wfc"),n.forEach((([t],n)=>{e[n]=t}))};(async()=>{if(!navigator.gpu)throw new Error("WebGPU support");const e=await navigator.gpu.requestAdapter();if(!e)throw new Error("WebGPU adapter");const t=await e.requestDevice();return{adapter:e,device:t}})().then((({adapter:e,device:t})=>{const n=new u({device:t}),r=new m({adapter:e,camera:n,device:t});document.getElementById("renderer").appendChild(r.canvas),r.setSize(window.innerWidth,window.innerHeight),window.addEventListener("resize",(()=>r.setSize(window.innerWidth,window.innerHeight)),!1);const i=new Uint32Array([320,180]),o=new l({renderer:r,size:i,setup:w});r.scene.push(o),n.position[0]=.5*i[0],n.position[1]=-.5*i[1],n.zoom=90,n.update();const a=new f({camera:n,target:r.canvas}),s=()=>{requestAnimationFrame(s),a.update();const e=t.createCommandEncoder();r.render(e),t.queue.submit([e.finish()])};requestAnimationFrame(s)})).catch((e=>{console.error(e),document.getElementById("support").classList.add("enabled")})).finally((()=>document.getElementById("loading").classList.remove("enabled")))}();
